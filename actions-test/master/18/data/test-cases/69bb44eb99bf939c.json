{
  "uid" : "69bb44eb99bf939c",
  "name" : "test_mock",
  "fullName" : "tests.simple_test.TestSomethingDoesntWork#test_mock",
  "historyId" : "b249a5c306acbb1fbf95fe2a2b8ac33e",
  "time" : {
    "start" : 1679496896162,
    "stop" : 1679496896163,
    "duration" : 1
  },
  "description" : "Check that 'SomeClient.my_method' can be mocked.\n\n        *Prerequisites*\n            * SomeClient instance created\n            * SomeClient.my_method is patched and new return_value is\n              specified\n\n        *Steps*\n            * Call SomeClient.my_method()\n            * Assert value returned by SomeClient.my_method()\n\n        *Expected Results*\n            * The return value should be equal to the newly patched value\n        ",
  "descriptionHtml" : "<p>Check that 'SomeClient.my_method' can be mocked.</p>\n<pre><code>    *Prerequisites*\n        * SomeClient instance created\n        * SomeClient.my_method is patched and new return_value is\n          specified\n\n    *Steps*\n        * Call SomeClient.my_method()\n        * Assert value returned by SomeClient.my_method()\n\n    *Expected Results*\n        * The return value should be equal to the newly patched value\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_module_fixture_tests.simple_test",
    "time" : {
      "start" : 1679496896116,
      "stop" : 1679496896116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "context",
    "time" : {
      "start" : 1679496896162,
      "stop" : 1679496896162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestSomethingDoesntWork",
    "time" : {
      "start" : 1679496896162,
      "stop" : 1679496896162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1679496896100,
      "stop" : 1679496896116,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestSomethingDoesntWork",
    "time" : {
      "start" : 1679496896116,
      "stop" : 1679496896116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check that 'SomeClient.my_method' can be mocked.\n\n        *Prerequisites*\n            * SomeClient instance created\n            * SomeClient.my_method is patched and new return_value is\n              specified\n\n        *Steps*\n            * Call SomeClient.my_method()\n            * Assert value returned by SomeClient.my_method()\n\n        *Expected Results*\n            * The return value should be equal to the newly patched value\n        ",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "eae8e7a2aa983179",
      "name" : "log",
      "source" : "eae8e7a2aa983179.txt",
      "type" : "text/plain",
      "size" : 441
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_module_fixture_tests.simple_test::0",
    "time" : {
      "start" : 1679496896164,
      "stop" : 1679496896164,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_method_fixture_TestSomethingDoesntWork::0",
    "time" : {
      "start" : 1679496896163,
      "stop" : 1679496896163,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestSomethingDoesntWork::0",
    "time" : {
      "start" : 1679496896164,
      "stop" : 1679496896164,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "simple_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSomethingDoesntWork"
  }, {
    "name" : "host",
    "value" : "fv-az309-658"
  }, {
    "name" : "thread",
    "value" : "2141-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.simple_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "fdbc129c0f4e99c0",
        "reportUrl" : "https://nivato.github.io/actions-test/master/17//#testresult/fdbc129c0f4e99c0",
        "status" : "passed",
        "time" : {
          "start" : 1678119671812,
          "stop" : 1678119671812,
          "duration" : 0
        }
      }, {
        "uid" : "a1a4c3d547126cff",
        "reportUrl" : "https://nivato.github.io/actions-test/master/16//#testresult/a1a4c3d547126cff",
        "status" : "passed",
        "time" : {
          "start" : 1677855046145,
          "stop" : 1677855046146,
          "duration" : 1
        }
      }, {
        "uid" : "59b6ee3c50da26f6",
        "reportUrl" : "https://nivato.github.io/actions-test/master/15//#testresult/59b6ee3c50da26f6",
        "status" : "passed",
        "time" : {
          "start" : 1677071541454,
          "stop" : 1677071541454,
          "duration" : 0
        }
      }, {
        "uid" : "78b6f4d1b5d67b3e",
        "reportUrl" : "https://nivato.github.io/actions-test/master/14//#testresult/78b6f4d1b5d67b3e",
        "status" : "passed",
        "time" : {
          "start" : 1676989609391,
          "stop" : 1676989609391,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "69bb44eb99bf939c.json",
  "parameterValues" : [ ]
}
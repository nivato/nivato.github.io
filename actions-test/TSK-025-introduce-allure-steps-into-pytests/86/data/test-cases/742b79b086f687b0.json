{
  "uid" : "742b79b086f687b0",
  "name" : "test_mock",
  "fullName" : "tests.simple_test.TestSomethingDoesntWork#test_mock",
  "historyId" : "b249a5c306acbb1fbf95fe2a2b8ac33e",
  "time" : {
    "start" : 1692011307528,
    "stop" : 1692011307528,
    "duration" : 0
  },
  "description" : "Check that 'SomeClient.my_method' can be mocked.\n\n        *Prerequisites*\n            * SomeClient instance created\n            * SomeClient.my_method is patched and new return_value is\n              specified\n\n        *Steps*\n            * Call SomeClient.my_method()\n            * Assert value returned by SomeClient.my_method()\n\n        *Expected Results*\n            * The return value should be equal to the newly patched value\n        ",
  "descriptionHtml" : "<p>Check that 'SomeClient.my_method' can be mocked.</p>\n<pre><code>    *Prerequisites*\n        * SomeClient instance created\n        * SomeClient.my_method is patched and new return_value is\n          specified\n\n    *Steps*\n        * Call SomeClient.my_method()\n        * Assert value returned by SomeClient.my_method()\n\n    *Expected Results*\n        * The return value should be equal to the newly patched value\n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestSomethingDoesntWork",
    "time" : {
      "start" : 1692011307527,
      "stop" : 1692011307528,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1692011307454,
      "stop" : 1692011307471,
      "duration" : 17
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestSomethingDoesntWork",
    "time" : {
      "start" : 1692011307472,
      "stop" : 1692011307472,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_module_fixture_tests.simple_test",
    "time" : {
      "start" : 1692011307471,
      "stop" : 1692011307471,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "context",
    "time" : {
      "start" : 1692011307528,
      "stop" : 1692011307528,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Check that 'SomeClient.my_method' can be mocked.\n\n        *Prerequisites*\n            * SomeClient instance created\n            * SomeClient.my_method is patched and new return_value is\n              specified\n\n        *Steps*\n            * Call SomeClient.my_method()\n            * Assert value returned by SomeClient.my_method()\n\n        *Expected Results*\n            * The return value should be equal to the newly patched value\n        ",
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "63383713bd7a8c7",
      "name" : "log",
      "source" : "63383713bd7a8c7.txt",
      "type" : "text/plain",
      "size" : 441
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestSomethingDoesntWork::0",
    "time" : {
      "start" : 1692011307529,
      "stop" : 1692011307529,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestSomethingDoesntWork::0",
    "time" : {
      "start" : 1692011307529,
      "stop" : 1692011307530,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_xunit_setup_module_fixture_tests.simple_test::0",
    "time" : {
      "start" : 1692011307530,
      "stop" : 1692011307530,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "simple_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSomethingDoesntWork"
  }, {
    "name" : "host",
    "value" : "fv-az1098-975"
  }, {
    "name" : "thread",
    "value" : "2049-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.simple_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "742b79b086f687b0.json",
  "parameterValues" : [ ]
}